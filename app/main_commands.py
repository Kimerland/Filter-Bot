from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardButton, InlineKeyboardMarkup
from app.filters.mute_manager import get_group_update
from app.filters.mute_manager import update_group_setting
from aiogram.types import CallbackQuery, Message

router = Router()
inputs = {}

@router.message(Command("start"))
async def start_cmd(message: Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!\n\n"
            "–î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –≤ —Å–≤–æ—é –≥—Ä—É–ø–ø—É, –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞–¥–º–∏–Ω–∞ —á—Ç–æ–±—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤–∞—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ.\n\n"
            "–ï—Å–ª–∏ –≤—ã –¥–æ–±–∞–≤–∏—Ç–µ —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –æ–Ω —Å–º–æ–∂–µ—Ç —É–¥–∞–ª—è—Ç—å –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∏ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è.\n\n"
            "–í—ã –º–æ–∂–µ—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç, –∞ —Ç–∞–∫ –∂–µ –æ—á–∏—â–∞—Ç—å –ª–∏–º–∏—Ç—ã –¥–ª—è –≤—Å–µ—Ö. –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é:\n"
            "‚ö†Ô∏è 2-—Ö –∏ –±–æ–ª–µ–µ —É–¥–∞–ª–µ–Ω–∏—è ‚Äì –º—É—Ç 2 —á–∞—Å–∞\n"
            "üö´ 6-x –∏ –±–æ–ª–µ–µ —É–¥–∞–ª–µ–Ω–∏—è ‚Äì –º—É—Ç 24 —á–∞—Å–∞\n\n"
            "–°–æ–∑–¥–∞–Ω @kimersed\n\n"
            "–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ /help?"
        )

@router.message(Command("help"))
async def help_cmd(message: Message):
    await message.answer(
        "üõ† *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*\n\n"
        "/start ‚Äî –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∏ –Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n"
        "/help ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–æ–º\n"
        "/settings ‚Äî –ì—Ä—É–ø–ø–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏\n\n"
        "_–ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã –±–æ—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!_",
        parse_mode="Markdown"
    )

@router.message(Command("settings"))
async def cmd_settings(message: Message):
    chat_id = message.chat.id
    settings = await get_group_update(chat_id)

    inline_keyword = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="–ö–æ—Ä–æ—Ç–∫–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è", callback_data="change_short")],
    [InlineKeyboardButton(text="–î–ª–∏–Ω–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è", callback_data="change_long")],
    [InlineKeyboardButton(text="–°–±—Ä–æ—Å–∏—Ç—å –ª–∏–º–∏—Ç—ã", callback_data="clear")],
    [InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="cancel")],
    ])

    text = (
         "‚öôÔ∏è –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:\n\n"
        f"‚Ä¢ –ö–æ—Ä–æ—Ç–∫–∞—è —Ñ–∏–ª—å—Ä–∞—Ü–∏—è: {settings['short_mute']['limit']} –Ω–∞—Ä—É—à–µ–Ω–∏–π ‚Üí {settings['short_mute']['duration']} —á.\n"
        f"‚Ä¢ –î–ª–∏–Ω–Ω–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è: {settings['long_mute']['limit']} –Ω–∞—Ä—É—à–µ–Ω–∏–π ‚Üí {settings['long_mute']['duration']} —á.\n\n"
    )

    await message.answer(text, reply_markup=inline_keyword)

@router.callback_query(F.data.startswith("change_"))
async def change_setting(callback: CallbackQuery):
    raw_type = callback.data.replace("change_", "")
    setting_type = f"{raw_type}_mute"
    user_id = callback.from_user.id

    inputs[user_id] = {
        "setting_type": setting_type,
        "chat_id": callback.message.chat.id
    }

    await callback.message.answer(f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è {setting_type} (—Ñ–æ—Ä–º–∞—Ç: –ª–∏–º–∏—Ç, —á–∞—Å—ã)")
    await callback.answer()


@router.message()
async def catch_setting_input(message: Message):
    user_id = message.from_user.id

    if user_id not in inputs:
        return
    
    try:
        data = inputs.pop(user_id)
        limit_str, hours_str = message.text.split(",")
        limit = int(limit_str.strip())
        hours = int(hours_str.strip())
    except Exception:
        await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥–∏—Ç–µ: 2, 4")
        return
    
    await update_group_setting(data["chat_id"], data["setting_type"], limit, hours)
    await message.answer(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ: {data['setting_type']} ‚Üí {limit} –Ω–∞—Ä—É—à–µ–Ω–∏–π –∑–∞ {hours} —á.")
